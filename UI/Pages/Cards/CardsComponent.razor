@using global::UI.UI.Domain.Models
@using global::UI.Service.Interfaces
@using global::UI.UI.Domain.Dto_S
@inject ICardService _cardService
@inject IProductService _productService
<h3 class="text-center text-black text-info">Прошлые покупки</h3>
@if (Cards is not null)
{
    <div class="card-group">
    @foreach (var cart in Cards)
    {
        <div class="card">
            <div class="card-header">
                <p class="card-title">Покупка на сумму @cart.TotalPrice.ToString() рублей</p>
            </div>
            <div class="card-body">
                <button class="btn btn-info" @onclick="() => GetCardInfo(cart.Id)">Подробнее</button>
            </div>
        </div>
    }
    </div>
}

else
{
    <p class="loading-progress">Loading..</p>
}

@code {
    public PreviousCart[]? Cards;

    protected override async void OnInitialized()
    {
        base.OnInitialized();
        var response = await _cardService.GetCardsAsync();
        if (response.Success)
            SetResponse(response.Cards);
    }

    private void SetResponse(PreviousCart[] carts)
    {
        Cards = carts;
        StateHasChanged();
    }
    
    private async Task<string> GetProductName(int id)
    {
        var product = await _productService.GetProductByIdAsync(id);
        return product.Name;
    }

    private void GetCardInfo(int id)
    {
        //РЕДИРЕКТ НА СТРАНИЦУ С ИНФОРМАЦИЕЙ
    }

}