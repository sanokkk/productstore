@page "/"
@using Blazored.LocalStorage
@using global::UI.Providers
@using Microsoft.AspNetCore.Http
@inject NavigationManager _manager;
@inject ILocalStorageService _localStorage;
@inject AuthenticationStateProvider _authenticationState;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?"/>

<button @onclick="redirect">All is ok</button>

<button @onclick="reg">Rigister</button>

<button @onclick="Logout">Logout</button>

<button @onclick="fetching">Fetching</button>

<p>@auth</p>

@code {
    private string auth;
    protected override async void OnInitialized()
    {
        base.OnInitialized();
        if ((await _authenticationState.GetAuthenticationStateAsync()).User.Identity.IsAuthenticated)
            auth = "Auth";
        else
            auth = "Not auth";
        StateHasChanged();
    }

    private void redirect()
    {
        _manager.NavigateTo("/fetchpage");
    }

    private void reg()
    {
        _manager.NavigateTo("/Register");
    }

    private void fetching()
    {
        _manager.NavigateTo("/fetchPage");
    }

    private async void Logout()
    {
        await _localStorage.RemoveItemAsync("jwt-token");
        await _localStorage.RemoveItemAsync("refresh-token");
        (_authenticationState as AuthProvider).NotifyAuthState();
        _manager.NavigateTo("/login");
    }

}